(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{798:function(a,t,e){"use strict";e.r(t);var s=e(17),r=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"hardware-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hardware-deployment"}},[a._v("#")]),a._v(" Hardware Deployment")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://lightninginabox.co",target:"_blank",rel:"noopener noreferrer"}},[a._v("Lightning in a Box"),t("OutboundLink")],1),a._v('\n"Your hardware. Your node. Your keys. Your Bitcoin".')]),a._v(" "),t("p",[a._v("In order for your Bitcoin experience to be truly self-sovereign and trustless you should consider "),t("strong",[a._v("running nodes on your own hardware")]),a._v(" and internet connection.\n"),t("strong",[a._v("BTCPay Server is an excellent way to run both Bitcoin & Lightning nodes")]),a._v(".\nNot only are you validating transactions you also get the ability to accept base layer Bitcoin and second layer Lightning payments.\nFollowing are instructions to install and host your very own BTCPay Server.")]),a._v(" "),t("p",[a._v("The process is basically the following:")]),a._v(" "),t("ol",[t("li",[a._v("Purchase and assemble hardware.")]),a._v(" "),t("li",[a._v("Install base Operating System and configure networking.")]),a._v(" "),t("li",[a._v("Install BTCPayServer-Docker.")])]),a._v(" "),t("p",[t("strong",[a._v("BTCPay Server can be installed on the following hardware")]),a._v(". The end result is a small, quiet node that is fast enough to sync from block zero. The total cost is approximately $300.")]),a._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://www.amazon.com/dp/B0C89TQ1YF?ref=nb_sb_ss_w_as-reorder-t1_k0_1_4&amp=&crid=SHKYOXZIRAO0&amp=&sprefix=beel",target:"_blank",rel:"noopener noreferrer"}},[a._v("BeeLink S12 - Mini PC - $169.00"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://www.amazon.com/Western-Digital-SA510-Internal-Solid/dp/B0C14TF467/ref=sr_1_3?crid=2WDY52E7ESSEB&dib=eyJ2IjoiMSJ9.MBxkb5ZIvwjKXOzscB0GUvsbhX1rVhilXNFzID6n0xHORsDBPkIxQhIixVuiLY9I16rlFs5COExAAD8761Do-tzuAnZiutbqN-KM9rAL4zCw94kA_ArCJeR_RTDynZbiXf2Phnahw1Gw2dqXVek3p0dpe6_a_fbJrqx4BRaieoYo0zj1mX6YPGaYZAmF2Vf_Quk1TrkARk6s1_wZ0vFUw7EWdjKJ9hmNLxPWMfADML90A1rXk8gSCcRnwV2jdzN7jCfg2_urfJZ3IWOW5X3iwnP7s-vSec88PGmQ3RhS-Rc.sEURveFhiTAHYwZQdwyJX72hpWL5UgD_3tEPet747oE&dib_tag=se&keywords=2tb+ssd+wd+blue&qid=1710685725&s=electronics&sprefix=2tb+ssd+wd+blue%2Celectronics%2C90&sr=1-3",target:"_blank",rel:"noopener noreferrer"}},[a._v("WD Blue 2TB SSD - $129.00"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("Other requirements are as follows:")]),a._v(" "),t("ol",[t("li",[a._v("High speed internet connection.")]),a._v(" "),t("li",[a._v("Static IP")]),a._v(" "),t("li",[a._v("Domain Name")]),a._v(" "),t("li",[a._v("Ability to open ports on your router (optional, BTCPayServer can be accessed over TOR or by Dynamic DNS).")]),a._v(" "),t("li",[a._v("Tiny Screwdriver")]),a._v(" "),t("li",[a._v("USB Thumb Drive")]),a._v(" "),t("li",[a._v("USB Keyboard, Mouse and Monitor (for initial install only). Can be headless when completed.")])]),a._v(" "),t("p",[a._v("Assuming you purchased the hardware mentioned above, here are the build instructions.")]),a._v(" "),t("h3",{attrs:{id:"configure-your-domain-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-your-domain-name"}},[a._v("#")]),a._v(" Configure your domain name.")]),a._v(" "),t("p",[a._v('It can take several hours for DNS changes to propagate so you should do this step first.\nLogin to your domain registrar and point an A record from your domain to the external IP address of your internet connection.\nI suggest that you use a subdomain (ie. btcpay.yourdomain.com).\nTo find your external IP address Google "whats my ip".')]),a._v(" "),t("h3",{attrs:{id:"assemble-your-lightning-in-a-box-liab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assemble-your-lightning-in-a-box-liab"}},[a._v("#")]),a._v(" Assemble your Lightning in a Box (LIAB).")]),a._v(" "),t("ul",[t("li",[a._v("Remove back cover with screwdriver.")]),a._v(" "),t("li",[a._v("Insert SSD")]),a._v(" "),t("li",[a._v("Install hard drive using included cage.")])]),a._v(" "),t("h3",{attrs:{id:"download-ubuntu-2204-lts-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#download-ubuntu-2204-lts-server"}},[a._v("#")]),a._v(" Download "),t("a",{attrs:{href:"https://releases.ubuntu.com/jammy/ubuntu-22.04.4-live-server-amd64.iso",target:"_blank",rel:"noopener noreferrer"}},[a._v("Ubuntu 22.04 LTS Server"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"download-and-install-balena-etcher"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#download-and-install-balena-etcher"}},[a._v("#")]),a._v(" Download and install "),t("a",{attrs:{href:"https://etcher.balena.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Balena Etcher"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("p",[a._v("Etcher is software that is used to flash OS images to SD cards and USB Drives.\nIn this case we will be using Etcher to flash our USB Thumb Drive with the Ubuntu OS.")]),a._v(" "),t("h3",{attrs:{id:"connect-your-usb-keyboard-mouse-monitor-and-thumb-drive"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#connect-your-usb-keyboard-mouse-monitor-and-thumb-drive"}},[a._v("#")]),a._v(" Connect your USB keyboard, mouse, monitor and thumb drive.")]),a._v(" "),t("p",[a._v('Press the power button to boot your LIAB. Press the "DEL" key to access the bios and change the boot order to use the thumb drive first.\nThe Ubuntu installation process is pretty simple and easy to follow. Here\'s a tutorial from the Ubuntu website. '),t("a",{attrs:{href:"https://ubuntu.com/tutorials/install-ubuntu-server#1-overview",target:"_blank",rel:"noopener noreferrer"}},[a._v("Install Ubuntu Server"),t("OutboundLink")],1),a._v(". The BeeLink S12 ships with Windows Pre-Installed so you will have to delete the NVME partitions and install Ubuntu on that drive.")]),a._v(" "),t("p",[a._v('*During the install process make sure you set the hostname to "btcpay" and enable SSH.')]),a._v(" "),t("h3",{attrs:{id:"give-your-liab-a-static-ip-address-on-your-local-network"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#give-your-liab-a-static-ip-address-on-your-local-network"}},[a._v("#")]),a._v(" Give your LIAB a static IP address on your local network.")]),a._v(" "),t("p",[a._v("There are a few different ways to do this and you will find a ton of articles online. Here's a pretty simple one to follow "),t("a",{attrs:{href:"https://www.linuxtechi.com/static-ip-address-on-ubuntu-server/",target:"_blank",rel:"noopener noreferrer"}},[a._v("How to configure a static IP address on Ubuntu 22.04"),t("OutboundLink")],1),a._v('. To avoid conflicts with other devices on your network you should also set a "reservation" for your LIAB.')]),a._v(" "),t("h3",{attrs:{id:"log-into-your-router-and-forward-ports-80-443-and-9735-to-your-liabs-local-ip-address-optional-if-using-local-or-tor-only"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#log-into-your-router-and-forward-ports-80-443-and-9735-to-your-liabs-local-ip-address-optional-if-using-local-or-tor-only"}},[a._v("#")]),a._v(" Log into your router and forward ports 80, 443 and 9735 to your LIAB's local IP address. (optional, if using .local, or Tor only)")]),a._v(" "),t("p",[a._v('Every router is different and you should be able to find instructions for your router by searching for "Port Forward + your router make and model".')]),a._v(" "),t("h3",{attrs:{id:"install-fail2ban-git-and-avahi-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-fail2ban-git-and-avahi-daemon"}},[a._v("#")]),a._v(" Install Fail2ban, GIT and Avahi-Daemon.")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/fail2ban/fail2ban/wiki/How-to-install-fail2ban-packages",target:"_blank",rel:"noopener noreferrer"}},[a._v("Fail2ban"),t("OutboundLink")],1),a._v(" bans IP's that attempt to connect to your server and show malicious signs. GIT allows you to clone and manage repositories on github.com.")]),a._v(" "),t("li",[t("a",{attrs:{href:"https://avahi.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Avahi"),t("OutboundLink")],1),a._v(" is a system which facilitates service discovery on a local network via the mDNS/DNS-SD protocol suite.\nOpen a new terminal window and type the following commands:")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" fail2ban "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" avahi-daemon\n")])])]),t("h3",{attrs:{id:"configuring-the-firewall"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-firewall"}},[a._v("#")]),a._v(" Configuring the firewall")]),a._v(" "),t("p",[a._v("Install a firewall and allow SSH, HTTP, HTTPS, Bitcoin, and Lightning:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" ufw\nufw default deny incoming\nufw default allow outgoing\n")])])]),t("p",[a._v("This command allows SSH connections from internal networks only:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ufw allow from "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.0")]),a._v(".0.0/8 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\nufw allow from "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.16")]),a._v(".0.0/12 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\nufw allow from "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.0/16 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\nufw allow from "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("169.254")]),a._v(".0.0/16 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\nufw allow from fc00::/7 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\nufw allow from fe80::/10 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\nufw allow from ff00::/8 to any port "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" proto tcp\n")])])]),t("p",[a._v("These ports need to be accessible from anywhere (The default subnet is 'any' unless you specify one):")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ufw allow "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("/tcp\nufw allow "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("/tcp\nufw allow "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8333")]),a._v("/tcp\nufw allow "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9735")]),a._v("/tcp\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Enable the firewall")]),a._v("\nufw "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Verify the configuration")]),a._v("\nufw status\n")])])]),t("h3",{attrs:{id:"install-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-docker"}},[a._v("#")]),a._v(" Install Docker")]),a._v(" "),t("div",{staticClass:"language-Bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" apt-transport-https ca-certificates "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" software-properties-common\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fsSL")]),a._v(" https://download.docker.com/linux/ubuntu/gpg "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" gpg "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dearmor")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" /usr/share/keyrings/docker-archive-keyring.gpg\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"deb [arch='),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("dpkg --print-architecture"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("lsb_release "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-cs")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(' stable"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" /etc/apt/sources.list.d/docker.list "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /dev/null\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-cache")]),a._v(" policy docker-ce\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker-ce\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl status "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),t("h3",{attrs:{id:"configuring-the-storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-storage"}},[a._v("#")]),a._v(" Configuring the storage")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("fdisk")]),a._v(" /dev/sda\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# type 'p' to list existing partitions")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# type 'd' to delete currently selected partitions")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# type 'n' to create a new partition")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# type 'w' to write the new partition table and exit fdisk")]),a._v("\nmkfs.ext4 /dev/sda1\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" /mnt/usb\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("UUID")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" blkid "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-s")]),a._v(" UUID "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" value /dev/sda1"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"UUID='),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$UUID")]),a._v(' /mnt/usb ext4 defaults,noatime,nofail 0 0"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" /etc/fstab\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mount")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n")])])]),t("h3",{attrs:{id:"create-mount-for-docker-volumes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-mount-for-docker-volumes"}},[a._v("#")]),a._v(" Create mount for Docker volumes")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-rf")]),a._v(" /var/lib/docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" /var/lib/docker\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mount")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--bind")]),a._v(" /mnt/usb /var/lib/docker\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/mnt/docker /var/lib/docker none bind,nobootwait 0 2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" /etc/fstab\nsystemctl restart "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),t("h3",{attrs:{id:"setup-btcpay-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup-btcpay-server"}},[a._v("#")]),a._v(" Setup BTCPay Server")]),a._v(" "),t("p",[a._v("Download BTCPay Server from GitHub:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ensure we are in root home")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" fail2ban "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone https://github.com/btcpayserver/btcpayserver-docker\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" btcpayserver-docker\n")])])]),t("p",[a._v("Configure BTCPay by setting some "),t("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker#environment-variables",target:"_blank",rel:"noopener noreferrer"}},[a._v("environment variables"),t("OutboundLink")],1),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BTCPAY_HOST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"btcpay.local"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("REVERSEPROXY_DEFAULT_HOST")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$BTCPAY_HOST")]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("NBITCOIN_NETWORK")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mainnet"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BTCPAYGEN_CRYPTO1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"btc"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BTCPAYGEN_LIGHTNING")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"clightning"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BTCPAYGEN_REVERSEPROXY")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nginx"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BTCPAY_ENABLE_SSH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true\n")])])]),t("p",[a._v("If you want to use multiple hostnames, add them via the optional "),t("code",[a._v("BTCPAY_ADDITIONAL_HOSTS")]),a._v(" variable:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("BTCPAY_ADDITIONAL_HOSTS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"btcpay.YourDomain.com"')]),a._v("\n")])])]),t("p",[a._v("In case you want to restrict access to your local network only, please note that you need to use a "),t("code",[a._v(".local")]),a._v(" domain.")]),a._v(" "),t("p",[a._v("Run the BTCPay installation:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" ./btcpay-setup.sh "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v("\n")])])]),t("p",[a._v("It should be up and running within a few minutes. Try opening http://btcpay.local in your web browser. If everything is correct, you will see BTCPay Server front page.")]),a._v(" "),t("p",[a._v("Now, you just need to wait a day or so for the Bitcoin blockchain to "),t("RouterLink",{attrs:{to:"/FAQ/Synchronization/"}},[a._v("sync and full verify")]),a._v(". The bottom of the BTCPay Server web GUI will show a pop-up dialog box to monitor the progress.")],1),a._v(" "),t("h3",{attrs:{id:"fastsync-optional"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fastsync-optional"}},[a._v("#")]),a._v(" FastSync (optional)")]),a._v(" "),t("p",[a._v("Please read very carefully to understand what "),t("RouterLink",{attrs:{to:"/Docker/fastsync/"}},[a._v("FastSync")]),a._v(" is and why it is important to verify the UTXO set yourself.")],1),a._v(" "),t("p",[a._v("By using FastSync, you are exposing yourself to attacks if a "),t("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker/blob/master/contrib/FastSync/README.md#what-are-the-downsides-of-fast-sync",target:"_blank",rel:"noopener noreferrer"}},[a._v("malicious UTXO set snapshot"),t("OutboundLink")],1),a._v(" is sent to you.\nIf you have another trusted node somewhere else, you can check the validity of the UTXO set gathered by FastSync by following "),t("a",{attrs:{href:"https://github.com/btcpayserver/btcpayserver-docker/blob/master/contrib/FastSync/README.md#dont-trust-verify",target:"_blank",rel:"noopener noreferrer"}},[a._v("these instructions"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Stop BTCPay Server")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /root/btcpayserver/btcpayserver-docker\n./btcpay-down.sh\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Import FastSync UTXO set")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" contrib/FastSync\n./load-utxo-set.sh\n")])])]),t("p",[a._v("FastSync currently takes about 30 minutes on a high-speed internet connection.\nAfter FastSync finishes, run the following command to restart BTCPay Server:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\n./btcpay-up.sh\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);